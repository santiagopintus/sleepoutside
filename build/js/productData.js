var i=(s,o,n)=>new Promise((a,d)=>{var h=t=>{try{r(n.next(t))}catch(c){d(c)}},u=t=>{try{r(n.throw(t))}catch(c){d(c)}},r=t=>t.done?a(t.value):Promise.resolve(t.value).then(h,u);r((n=n.apply(s,o)).next())});function f(s){if(s.ok)return s.json();throw new Error("Bad Response")}export default class g{constructor(o){this.category=o,this.path=`../json/${this.category}.json`}getData(){fetch("../json/${this.category}.json").then(f).then(o=>o)}findProductById(o){return i(this,null,function*(){const n=yield this.getData();return n.find(a=>a.Id===e.target.dataset.id)})}}
