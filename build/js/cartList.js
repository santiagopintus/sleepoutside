var n=(o,t,e)=>new Promise((i,a)=>{var s=r=>{try{l(e.next(r))}catch(c){a(c)}},m=r=>{try{l(e.throw(r))}catch(c){a(c)}},l=r=>r.done?i(r.value):Promise.resolve(r.value).then(s,m);l((e=e.apply(o,t)).next())});import{renderListWithTemplate as g,getLocalStorage as h}from"./utils.js";export default class y{constructor(t,e){this.key=t,this.listElement=e,this.total=0}init(){return n(this,null,function*(){const t=h(this.key);this.calculateListTotal(t),this.renderList(t)})}prepareTemplate(t,e){return console.log(e),e.Images?t.querySelector(".cart-card__image img").src=e.Images.PrimaryMedium:t.querySelector(".cart-card__image img").src=e.Image,t.querySelector(".cart-card__image img").alt+=e.Name,t.querySelector(".card__name").textContent=e.Name,t.querySelector(".cart-card__color").textContent=e.Colors[0].ColorName,t.querySelector(".cart-card__price").textContent+=e.FinalPrice,t}calculateListTotal(t){const e=t.map(a=>a.FinalPrice),i=e.reduce((a,s)=>a+s);this.total=i.toFixed(2)}renderList(t){this.listElement.innerHTML="";const e=document.getElementById("cart-card-template");g(e,this.listElement,t,this.prepareTemplate),document.querySelector(".list-total").innerText+=` $${this.total}`}}
